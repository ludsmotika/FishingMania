@using FishingMania.Web.ViewModels.Catch;
@model AllCatchesQueryViewModel
@inject SignInManager<ApplicationUser> SignInManager
@{
    this.ViewData["Title"] = "Catches";
}

<div class="col-md-12 d-flex bg-primary rounded-pill">
    <h1 class="text-white text-center m-5"><strong>All the catches</strong></h1>
    @if (this.SignInManager.IsSignedIn(this.User))
    {
        <a class="btn my-auto ms-auto m-3 bg-white text-primary" asp-controller="Catches" asp-action="Mine">My catches</a>
    }
    <a class="btn my-auto m-3 bg-white text-primary ms-auto" asp-controller="Catches" asp-action="Create">Add new catch</a>
</div>

<div class="bg-primary text-white col-md-12 my-5 rounded-pill">
    <form method="get" class="mx-5">
        <div class="row">
            <div class="form-group col-md-3 d-flex justify-content-between my-3">
                <div class="form-group">
                    <label asp-for="Type"></label>
                    <select asp-for="Type" class="form-control">
                        <option value="">All</option>
                        @foreach (var category in Model.Types)
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label asp-for="CatchesPerPage"></label>
                    <select asp-for="CatchesPerPage" class="form-control">
                        <option value="3">3</option>
                        <option value="6">6</option>
                        <option value="9">9</option>
                    </select>
                </div>
            </div>

            <div class="form-group col-md-3 my-3">
                <label asp-for="SearchString"></label>
                <input asp-for="SearchString" class="form-control" placeholder="...">
            </div>

            <div class="form-group col-md-3 my-3">
                <div class="form-group">
                    <label asp-for="CatchesSorting"></label>
                    <select asp-for="CatchesSorting" class="form-control">
                        <option value="0">Newest</option>
                        <option value="1">Oldest</option>
                        <option value="2">Fish Weight Ascending</option>
                        <option value="3">Fish Weight Descending</option>
                    </select>
                </div>
            </div>

            <div class="col-md-2 my-3">
                <div class="form-group mt-4 p-2">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </form>
</div>

@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    int maxPage = (int)Math.Ceiling((double)Model.TotalCatches /
        Model.CatchesPerPage);
}


@if (!Model.Catches.Any())
{
    <h2 class="text-center my-5">No catches found by the given criteria!</h2>
}

<div class="row">
    @foreach (var currentCatch in Model.Catches)
    {
        <partial name="~/Views/Shared/Catches/_CatchPartialView.cshtml" for="@currentCatch" />
    }
</div>


<div class="row offset-4 col-md-4 mb-5 bg-primary rounded-pill">
    <div class="col-md-4 d-grid gap-2 d-md-flex justify-content-md-start my-3">
        <a class="btn bg-white text-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Catches"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-catchesPerPage="@Model.CatchesPerPage"
           asp-route-type="@Model.Type"
           asp-route-searchString="@Model.SearchString"
           asp-route-catchesSorting="@((int)Model.CatchesSorting)"><<</a>
    </div>

    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Catches.Any();
    }

    <span class="col-md-4 text-center text-white align-self-center">@Model.CurrentPage / @maxPage</span>

    <div class="col-md-4 d-grid gap-2 d-md-flex justify-content-md-end my-3">
        <a class="btn bg-white text-primary 
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Catches"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-catchesPerPage="@Model.CatchesPerPage"
           asp-route-type="@Model.Type"
           asp-route-searchString="@Model.SearchString"
           asp-route-catchesSorting="@((int)Model.CatchesSorting)">>></a>
    </div>
</div>