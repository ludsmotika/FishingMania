@using FishingMania.Web.ViewModels.Catch;
@using System.Security.Claims;
@using System.Text.Encodings.Web;
@using Newtonsoft.Json;
@model CatchDetailsViewModel
@inject UserManager<ApplicationUser> UserManager

<div class="container my-5 text-center">
    @if (User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.ApplicationUserId)
    {
        <div class="d-flex my-5 bg-primary rounded-pill">
            <h3 class="text-white font-weight-bold m-5 mr-auto">As a owner of this post you can: </h3>
            <a class="btn m-5 ms-auto bg-white text-primary" asp-controller="Catches" asp-action="Delete" asp-route-id="@Model.Id">Delete Post</a>
        </div>
    }
    <div class="row col-md-12 bg-primary rounded-5 text-white display-6">
        <div class="col-md-6 rounded-3 my-5">
            <img src="@Model.Image.URL" alt="Fish Image" class="img-fluid rounded-5 w-100 my-4">
            <div class="text-center bg-dark bg-opacity-75 font-weight-bold rounded-1">
                <h2 class="text-wrap text-break">@Model.Description</h2>
            </div>
        </div>
        <div class="col-md-6 text-center bg-dark bg-opacity-75 font-weight-bold my-5 rounded-5">
            <div class="my-4">
                <span class="font-weight-bold">Fish Weight:</span> @Math.Round(Model.FishWeight,3) kg.
            </div>
            <div class="my-4 mb-0">
                <span class="font-weight-bold">Fish Species:</span>
                <img class="col-md-6 rounded-5" src="@Model.FishSpecies.Image.URL" />
            </div>
            <p class="h5 text-center offset-6 col-md-5">@Model.FishSpecies.Name</p>
            <div class="my-4">
                <span class="font-weight-bold">Fishing Spot:</span>
                <img class="col-md-6 rounded-5" src="@Model.FishingSpot.Image.URL" />
                <a class="btn btn-secondary text-primary mt-3" asp-controller="FishingSpots" asp-action="Details" asp-route-id="@Model.FishingSpotId">Go check the fishing spot!</a>
            </div>
        </div>
    </div>
    <div class="row col-md-12 my-5 align-items-center bg-primary text-white rounded-5">
        <h2 class="mb-4 my-3">Post Information</h2>
        <div class="col-md-4 d-flex flex-row m-auto">
            <p>Posted by: <i class="fa-solid fa-user my-auto mx-5"></i>@Model.ApplicationUser.UserName</p>
        </div>
        <div class="col-md-4 d-flex flex-row m-auto">
            <p>Votes:</p>
            <a id="likeButton">
                <i id="likeIcon" class="@(Model.Votes.Where(x => x.ApplicationUserId == User.FindFirst(ClaimTypes.NameIdentifier)?.Value && x.IsPositive == true).Any() ? "fa-solid" : "fa-regular") far fa-thumbs-up my-auto mx-5"></i>
            </a>
            <p id="likesCount">@Model.Votes.Where(x=>x.IsPositive == true).Count()</p>
            <a id="dislikeButton">
                <i id="dislikeIcon" class="@(Model.Votes.Where(x => x.ApplicationUserId == User.FindFirst(ClaimTypes.NameIdentifier)?.Value && x.IsPositive == false).Any() ? "fa-solid" : "fa-regular")  fa-thumbs-down my-auto mx-5"></i>
            </a>
            <p id="dislikesCount">@Model.Votes.Where(x=>x.IsPositive == false).Count()</p>
        </div>
        <div class="col-md-4 d-flex flex-row m-auto mb-4">
            <a class="btn bg-white text-primary rounded-5 m-auto" asp-controller="Reports" asp-action="ReportPost" asp-route-catchId="@Model.Id">Report Post</a>
        </div>
    </div>
    <div class="row col-md-12 bg-primary text-white rounded-5">

        <h2 class="my-3">Post Comments</h2>

        @if (this.User.Identity.IsAuthenticated)
        {
            <form id="commentForm">
                <p>Write a comment:</p>
                <div class="d-flex flex-row text-center mb-5">
                    <textarea id="commentContent" rows="4" class="col-md-10 rounded-5"></textarea>
                    <button type="submit" class="btn bg-white text-primary m-auto">Submit Comment</button>
                </div>
                <span id="commentLengthValidationSpan" class="text-danger"></span>
            </form>
        }
        else
        {
            <div class="container d-flex flex-row offset-3 col-md-6 mt-4">
                <span>Please login if you want to leave comments on posts:</span>
                <a class="nav-link btn my-auto col-md-2 mx-auto bg-white text-primary" asp-area="Identity" asp-page="/Account/Login"><strong>Login</strong></a>
            </div>
        }
        <div id="commentsSection">
            <partial name="~/Views/Shared/Comments/_CommentsListPartialView.cshtml" for="@Model.Comments" />
        </div>
    </div>

</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#likeButton, #dislikeButton').click(function (event) {
                event.preventDefault();

                var catchId = @Model.Id;


                if (@JsonConvert.ToString(this.User.Identity.IsAuthenticated).ToLower()) {

                    var applicationUserId = Boolean(`@User.Identity.IsAuthenticated`) ? `@User.FindFirst(ClaimTypes.NameIdentifier)?.Value` : null;
                    var isPositive = event.target.id == "likeIcon" ? true : false;
                    if (event.target.id == "likeButton" || event.target.id == "dislikeButton") {
                        return;
                    }

                    var isClicked = $(event.target).hasClass("fa-solid") ? true : false;
                    var voteData = {
                        catchId: catchId,
                        isPositive: isPositive,
                        isClicked: isClicked,
                        applicationUserId: applicationUserId,
                    };
                    $.ajax({
                        url: '/api/Votes/Vote',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(voteData),
                        success: function (voteState) {
                            if (voteState == "removeVote") {

                                if (isPositive) {
                                    var newLikeIconElement = $('<a id="likeIcon" class="fa-regular fa-thumbs-up my-auto mx-5" style="color:white; text-decoration:none;"></a>');
                                    $('#likeIcon').replaceWith(newLikeIconElement);
                                    $("#likesCount").text(parseInt($("#likesCount").text()) - 1);
                                }
                                else {
                                    var newDislikeIconElement = $('<a id="dislikeIcon" class="fa-regular fa-thumbs-down my-auto mx-5" style="color:white; text-decoration:none;"></a>');
                                    $('#dislikeIcon').replaceWith(newDislikeIconElement);
                                    $("#dislikesCount").text(parseInt($("#dislikesCount").text()) - 1);
                                }
                            }
                            else if (voteState == "changingVoteIsPositive") {
                                if (event.target.id == "likeIcon") {
                                    var newLikeIconElement = $('<a id="likeIcon" class="fa-solid fa-thumbs-up my-auto mx-5" style="color:white; text-decoration:none;"></a>');
                                    var newDislikeIconElement = $('<a id="dislikeIcon" class="fa-regular fa-thumbs-down my-auto mx-5" style="color:white; text-decoration:none;"></a>');

                                    $('#likeIcon').replaceWith(newLikeIconElement);
                                    $('#dislikeIcon').replaceWith(newDislikeIconElement);

                                    $("#likesCount").text(parseInt($("#likesCount").text()) + 1);
                                    $("#dislikesCount").text(parseInt($("#dislikesCount").text()) - 1);
                                }
                                else {
                                    var newLikeIconElement = $('<a id="likeIcon" class="fa-regular fa-thumbs-up my-auto mx-5" style="color:white; text-decoration:none;"></a>');
                                    var newDislikeIconElement = $('<a id="dislikeIcon" class="fa-solid fa-thumbs-down my-auto mx-5" style="color:white; text-decoration:none;"></a>');

                                    $('#likeIcon').replaceWith(newLikeIconElement);
                                    $('#dislikeIcon').replaceWith(newDislikeIconElement);

                                    $("#likesCount").text(parseInt($("#likesCount").text()) - 1);
                                    $("#dislikesCount").text(parseInt($("#dislikesCount").text()) + 1);
                                }
                            }
                            else if (voteState == "newVote") {

                                if (isPositive) {
                                    var newLikeIconElement = $('<a id="likeIcon" class="fa-solid fa-thumbs-up my-auto mx-5" style="color:white; text-decoration:none;"></a>');
                                    $('#likeIcon').replaceWith(newLikeIconElement);
                                    $("#likesCount").text(parseInt($("#likesCount").text()) + 1);
                                }
                                else {
                                    var newDislikeIconElement = $('<a id="dislikeIcon" class="fa-solid fa-thumbs-down my-auto mx-5" style="color:white; text-decoration:none;"></a>');
                                    $('#dislikeIcon').replaceWith(newDislikeIconElement);
                                    $("#dislikesCount").text(parseInt($("#dislikesCount").text()) + 1);
                                }
                            }
                            else if (voteState == "repeatedVote") {
                                return;
                            }
                        },
                        error: function (xhr) {
                            alert("Problem occured while voting on the post!");
                        }
                    });
                }
                else {
                    alert("Login to vote on posts!");
                }

            });


            $('#commentForm').submit(function (event) {
                event.preventDefault();

                var content = $('#commentContent').val();

                var minContentLength = 15;
                var maxContentLength = 500;

                if (content.length < minContentLength) {
                    $('#commentLengthValidationSpan').text('Please enter at least ' + minContentLength + ' characters.');
                    return;
                } else if (content.length > maxContentLength) {
                    $('#commentLengthValidationSpan').text('Please enter no more than ' + maxContentLength + ' characters.');
                    return;
                }
                else {
                    $('#commentLengthValidationSpan').empty();
                }
                console.log(Boolean(`@User.Identity.IsAuthenticated`));
                var applicationUserId = Boolean(`@User.Identity.IsAuthenticated`) ? `@User.FindFirst(ClaimTypes.NameIdentifier)?.Value` : null;

                var commentContent = $('#commentContent').val();
                var commentData = {
                    content: commentContent,
                    applicationUserId: applicationUserId,
                    entityType: @Convert.ToInt32(EntityWithCommentsType.Catch),
                    entityTypeId: @Model.Id,
                };

                $('#commentContent').val('');

                $.ajax({
                    url: '/api/Comments',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(commentData),
                    success: function (comments) {
                        $('#commentsSection').empty();

                        $('#commentsSection').append(comments);
                    },
                    error: function (xhr, status, error) {
                        alert("Unexpected error while commenting this post!");
                    }
                });
            });
        });
    </script>
}
