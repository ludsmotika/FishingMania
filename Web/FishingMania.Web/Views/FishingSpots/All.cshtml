@using FishingMania.Web.ViewModels.FishingSpot;
@model AllFishingSpotsPaginationViewModel
@{
    this.ViewData["Title"] = "Fishing Spots Page";
}

<h1 class="text-white bg-primary col-md-6 offset-3 rounded-pill text-center my-5"><strong>All fishing spots!</strong></h1>

<div class="d-flex col-md-12 row">
    @foreach (var spot in Model.FishingSpots)
    {
        <partial name="~/Views/Shared/FishingSpots/_FishingSpotPartialView.cshtml" for="@spot" />
    }
</div>


<div class="row offset-4 col-md-4 mb-5 bg-primary rounded-pill">
    <div class="col-md-4 d-grid gap-2 d-md-flex justify-content-md-start my-3">
        <a class="btn bg-white text-primary @(Model.PageNumber == 1 ? "disabled" : string.Empty)"
           asp-controller="FishingSpots"
           asp-action="All"
           asp-route-page="@Model.PreviousPageNumber"><<</a>
    </div>

    @{
        bool shouldNextPageBeDisabled = !Model.HasNextPage ||
        !Model.FishingSpots.Any();
    }

    <span class="col-md-4 text-center text-white align-self-center">@Model.PageNumber / @Model.PagesCount</span>

    <div class="col-md-4 d-grid gap-2 d-md-flex justify-content-md-end my-3">
        <a class="btn bg-white text-primary
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
           asp-controller="FishingSpots"
           asp-action="All"
           asp-route-page="@(Model.PageNumber + 1)">>></a>
    </div>
</div>